<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link
      rel="stylesheet"
      href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200"
    />
    <link rel="stylesheet" href="/stylesheets/index.css" />
    <script defer src="../javascripts/script.js"></script>

    <script
      defer
      src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.1.3/axios.min.js"
    ></script>
    <title>StudySmart: <%=deck.name%></title>
  </head>
  <body>
    <header>
      <nav>
        <a href="/summary"
          ><span class="material-symbols-outlined"> arrow_back_ios </span
          ><span class="material-symbols-outlined"> empty_dashboard </span></a
        >
        <h1><%=deck.name%></h1>
        <a href="/"><span class="material-symbols-outlined"> logout </span></a>
      </nav>
    </header>
    <div class="display-container">
      <a href="/decks/<%=deck._id%>/flashcards/new"
        ><button class="show-deck-btns">Add Card to Deck</button></a
      >
      <table>
        <thead>
          <tr>
            <th>Cards Due:</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="cards-due"></td>
          </tr>
        </tbody>
      </table>
      <button class="study-now-btn">Study Now</button>
      <div class="finished" style="display: none">
        You've finished your cards for this deck!
      </div>
    </div>
    <div class="show-container">
      <div class="front-container" style="display: none"></div>
      <div class="back-container" style="display: none"></div>
      <div class="post-reveal" style="display: none">
        <div class="again post"><button type="submit">Again</button></div>
        <div class="hard post"><button type="submit">Hard</button></div>
        <div class="good post"><button type="submit">Good</button></div>
        <div class="easy post"><button type="submit">Easy</button></div>
      </div>

      <div class="reveal" style="display: none">
        <button>Reveal</button>
      </div>
    </div>
    <script>
      // import axios from 'axios'
      // constants

      //states
      let counter = 0;
      // event listeners

      const studyNow = document.querySelector(".study-now-btn");
      const showAnswer = document.querySelector(".reveal");
      const postReveal = document.querySelector(".post-reveal");
      const difficultyBtns = document.getElementsByClassName("post");
      const frontContainer = document.querySelector(".front-container");
      const backContainer = document.querySelector(".back-container");
      const displayContainer = document.querySelector(".display-container");
      const finished = document.querySelector(".finished");
      const showContainer = document.querySelector(".show-container");

      async function getData(deckID) {
        let cards;
        try {
          const endpoint = "/api/flashcards/" + deckID;
          let flashcards = await fetch(endpoint).then((res) =>
            res.json().then((data) => {
              cards = data.deck.flashcards;
              //render functionality
              document.querySelector(".cards-due").textContent = cards.length;
              studyNow.addEventListener("click", function () {
                if (frontContainer.style.display === "none") {
                  frontContainer.style.display = "flex";
                  displayContainer.style.display = "none";
                  showAnswer.style.display = "flex";
                }
                frontContainer.textContent = cards[counter].front;
                backContainer.textContent = cards[counter].back;
              });
              showAnswer.addEventListener("click", function () {
                if (
                  postReveal.style.display === "none" &&
                  backContainer.style.display === "none"
                ) {
                  postReveal.style.display = "flex";
                  backContainer.style.display = "flex";
                  showAnswer.style.display = "none";
                }
              });

              let status;
              for (let i = 0; i < difficultyBtns.length; i++) {
                difficultyBtns[i].addEventListener("click", function () {
                  let currentDueDate = cards[counter].due;
                  const newDate = new Date();
                  if (difficultyBtns[i].classList.contains("again")) {
                    newDate.setMinutes(newDate.getMinutes() + 15);
                    status = "Due";
                  }
                  if (difficultyBtns[i].classList.contains("hard")) {
                    newDate.setDate(newDate.getDate() + 1);
                    status = "Pending";
                  }
                  if (difficultyBtns[i].classList.contains("good")) {
                    newDate.setDate(newDate.getDate() + 3);
                    status = "Pending";
                  }
                  if (difficultyBtns[i].classList.contains("easy")) {
                    newDate.setDate(newDate.getDate() + 7);
                    status = "Pending";
                  }
                  async function update() {
                    await axios.put(
                      `/api/decks/${deckID}/flashcards/${cards[counter]._id}`,
                      { currentDueDate: newDate, status: status }
                    );
                  }
                  update();
                  if (counter < cards.length - 1) {
                    counter++;
                    frontContainer.textContent = cards[counter].front;
                    backContainer.style.display = "none";
                    showAnswer.style.display = "flex";
                    postReveal.style.display = "none";
                    backContainer.textContent = cards[counter].back;
                  } else {
                    displayContainer.style.display = "flex";
                    finished.style.display = "flex";
                    showContainer.style.display = "none";
                  }
                });
              }
            })
          );
        } catch (err) {
          console.log(err);
        }
      }
      var s = <%- JSON.stringify(deckID); %>
      getData(s);

      function showCard() {}
      function showBack() {}
      function updateCard() {}
    </script>
  </body>
</html>
